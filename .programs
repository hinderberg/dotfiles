
if test ! $(which brew); then
    echo "Installing homebrew.."
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

# Update brew
brew update

# Update brew formula
brew upgrade

packages=(
    coreutils
    findutils
    bash
    m-cli
    caskroom/cask/brew-cask
    python
    macvim
    vim
    maven
    mitmproxy
    findutils
    git
    bash-completion
    mongodb
    rethinkdb
    redis
    heroku-toolbelt
    imagemagick
    xctool
    docker
    docker-compose
    docker-machine
    docker-swarm
    watchman
    flow
    awsebcli
    carthage
)

# Install the packages
echo "Installing packages.."
brew install ${packages[@]}

apps=(
    google-chrome
    firefox
    spotify
    vlc
    1password
    slack
    marked
    cheatsheet
    quicklook-json
    google-drive
    dropbox
    virtualbox
    atom
    jetbrains-toolbox
    ngrok
    vagrant
    java
    sourcetree
    spectacle
    postico
    sketch
    skype
)

echo "Installing apps.."
brew cask install ${apps[@]}

# Fonts

brew tap caskroom/fonts

fonts=(
  font-m-plus
  font-clear-sans
  font-roboto
  font-source-code-pro
  font-inconsolata
  font-hack
  font-fira-code
)

echo "Installing fonts..."
brew cask install ${fonts[@]}


# Brew cleanup
brew cleanup

# Install nvm

if test ! $(which nvm); then
    echo "Installing nvm.."
    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.26.1/install.sh | bash
fi

[[ -s $HOME/.nvm/nvm.sh ]] && . $HOME/.nvm/nvm.sh  # This loads NVM

nvm install stable

npms=(
    react-native-cli,
    npm-check
)

npm install -g ${npms[@]}


# Install apms

apms=(
    atom-beautify
    atom-html-preview
    atom-ternjs
    color-picker
    emmet
    highlight-line
    highlight-selected
    refactor
    js-refactor
    redux-snippets
    package-atom-snippets
    es6-javascript
    keybinding-cheatsheet
    linter
    linter-eslint
    minimap
    react
    save-session
    hyperclick
    js-hyperclick
    atom-material-ui
    atom-material-syntax
    atom-material-syntax-light
    seti-ui
    monokai
    monokai-seti
    open-recent
    minimap-highlight-selected
    pigments
    markdown-preview-enhanced
    split-diff
)

apm install ${apms[@]}
