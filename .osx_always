####################
# Alias
####################

alias s='open /System/Library/Frameworks/ScreenSaver.framework/Versions/A/Resources/ScreenSaverEngine.app'
alias safarihardware='CA_COLOR_OPAQUE=1 /Applications/Safari.app/Contents/MacOS/Safari'
alias simulatorhardware='CA_COLOR_OPAQUE=1 /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Applications/iPhone\ Simulator.app/Contents/MacOS/iPhone\ Simulator'
alias ios="open /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Applications/iPhone\ Simulator.app"

alias update='sudo softwareupdate -i -a; brew update; brew upgrade; brew cleanup; npm update npm -g; npm update -g; sudo gem update'

####################
# Functions
####################

function command_not_found_handle() {
	appname=${1//_/-}
	appname=${appname//-/[-_\ ]} 
	echo "Searching Mac app that matches $appname.app ..."
	app=`find /Applications -name "*.app" -prune | grep -i -m1 "/$appname.app"`

	if [ "$app" != "" ]
	then
		shift 1
		file=$1
		shift 1
		if [ "$file" == "" ]
		then
			echo "Launching $app ..."
                	open -a "$app"
		else
			if [ "$1" == "" ]
			then
				echo "Launching $app on $file ..."
				open -a "$app" "$file"
			else
				echo "Launching $app on $file with parameters $@ ..."
				open -a "$app" "$file" --args "$@"
			fi
		fi
		return 0
	fi

	echo $"$1: command not found"
	return 127
}

# Add note to Notes.app (OS X 10.8)
# Usage: `note 'title' 'body'` or `echo 'body' | note`
# Title is optional
function note() {
	local title
	local body
	if [ -t 0 ]; then
		title="$1"
		body="$2"
	else
		title=$(cat)
	fi
	osascript >/dev/null <<EOF
tell application "Notes"
	tell account "iCloud"
		tell folder "Notes"
			make new note with properties {name:"$title", body:"$title" & "<br><br>" & "$body"}
		end tell
	end tell
end tell
EOF
}

# Add reminder to Reminders.app (OS X 10.8)
# Usage: `remind 'foo'` or `echo 'foo' | remind`
function remind() {
	local text
	if [ -t 0 ]; then
		text="$1" # argument
	else
		text=$(cat) # pipe
	fi
	osascript >/dev/null <<EOF
tell application "Reminders"
	tell the default list
		make new reminder with properties {name:"$text"}
	end tell
end tell
EOF
}


if [ -f `brew --prefix`/etc/bash_completion ]; then
  . `brew --prefix`/etc/bash_completion
fi
